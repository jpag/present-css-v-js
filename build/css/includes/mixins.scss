/* animations */
//add escape property when passing into this mixin
// .animate-default(e("width, color, blah"));

@mixin animate-default($property:all, $time:500ms ){
  $ease: cubic-bezier(0.385, 0.205, 0.235, 0.835);
  @include animateMixin($property, $time, $ease);
}

@mixin animate-StrongEaseOut($property:all, $time:500ms ){
  $ease: cubic-bezier(0.900, 0.005, 0.000, 1.000);
  @include animateMixin($property, $time, $ease);
}

@mixin animateMixin($property, $time, $ease){
  -webkit-transition: $property $time $ease;
       -moz-transition: $property $time $ease;
        -ms-transition: $property $time $ease;
         -o-transition: $property $time $ease;
            transition: $property $time $ease;
}


@mixin animate-transform($time){
  $ease : cubic-bezier(0.385, 0.205, 0.235, 0.835);;
  -webkit-transition: -webkit-transform $time $ease;
   -moz-transition: -moz-transform $time $ease;
    -ms-transition: -ms-transform $time $ease;
     -o-transition: -o-transform $time $ease;
        transition: transform $time $ease;
}

@mixin animate-height-width($time:500ms ){
    -webkit-transition: height $time cubic-bezier(0.385, 0.205, 0.235, 0.835);
       -moz-transition: height $time cubic-bezier(0.385, 0.205, 0.235, 0.835);
        -ms-transition: height $time cubic-bezier(0.385, 0.205, 0.235, 0.835);
         -o-transition: height $time cubic-bezier(0.385, 0.205, 0.235, 0.835);
            transition: height $time cubic-bezier(0.385, 0.205, 0.235, 0.835);

  -webkit-transition: width $time cubic-bezier(0.385, 0.205, 0.235, 0.835);
       -moz-transition: width $time cubic-bezier(0.385, 0.205, 0.235, 0.835);
        -ms-transition: width $time cubic-bezier(0.385, 0.205, 0.235, 0.835);
         -o-transition: width $time cubic-bezier(0.385, 0.205, 0.235, 0.835);
            transition: width $time cubic-bezier(0.385, 0.205, 0.235, 0.835);
}

@mixin colorize_bg($color: #FFFFFF, $alpha: 1) {
    background: hsla(hue($color), saturation($color), lightness($color), $alpha);
}

@mixin animate{
  @include animate-default(all, 250ms);
}

@mixin alpha($opacity:100){
  
  //decimal 0-1
  opacity: $opacity / 100;
  
  //whole number 1-100
  filter :alpha(opacity=$opacity);
}


@mixin prefix ( $property, $value... ) {
  -webkit-#{$property}: $value;
     -moz-#{$property}: $value;
      -ms-#{$property}: $value;
       -o-#{$property}: $value;
          #{$property}: $value;
}



@mixin animateDelay($type, $delay){
  $animation: $type 500ms $delay infinite;

  animation:         $animation; /* IE 10+ */
  -webkit-animation: $animation; /* Safari 4+ */
  -moz-animation:    $animation; /* Fx 5+ */
  -o-animation:      $animation; /* Opera 12+ */
}



@mixin cssComplexAni {
  0%   { 
        //opacity: 1; 
        background-color: $demoColor;
        top: 0px; 
      }
  50%  { 
        //opacity: 0.5; 
        background-color: $demoFadeColor;
        top: 25px; 
      }
  100% { 
      //opacity: 1; 
      background-color: $demoColor;
      top: 0px;
    }
}

@-webkit-keyframes cssComplexAnimate {
  @include cssComplexAni;
}
@-moz-keyframes cssComplexAnimate {
  @include cssComplexAni;
}
@-o-keyframes cssComplexAnimate {
  @include cssComplexAni;
}
@keyframes cssComplexAnimate {
  @include cssComplexAni;
}


@mixin cssComplexAniTrans {
  0%   { 
        opacity: 1; 
        // top: 0px; 
        @include prefix ( transform, translate3d(0px, 0px, 0px) );
      }
  50%  { 
        opacity: 0.5; 
        // top: 25px; 
        @include prefix ( transform, translate3d(0px, 25px, 0px) );
      }
  100% { 
      opacity: 1; 
      // top: 0px;
      @include prefix ( transform, translate3d(0px, 0px, 0px) );
  }
}

@-webkit-keyframes cssComplexAnimateTransform {
  @include cssComplexAniTrans;
}
@-moz-keyframes cssComplexAnimateTransform {
  @include cssComplexAniTrans;
}
@-o-keyframes cssComplexAnimateTransform {
  @include cssComplexAniTrans;
}
@keyframes cssComplexAnimateTransform {
  @include cssComplexAniTrans;
}
